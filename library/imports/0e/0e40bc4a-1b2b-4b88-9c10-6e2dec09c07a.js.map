{"version":3,"sources":["assets\\Script\\illustrative.js"],"names":["cc","Class","Component","properties","container","Node","avatar","prefab","Prefab","init","c","_controller","social","node","active","highLevel","getHighestLevel","showAvatar","loadContainer","level","data","gameData","json","levelData","heightScore","getHighestScore","getChildByName","getComponent","Label","string","name","setTimeout","scoreMgr","characterMgr","showAvatarCharacter","clearContainer","i","length","card","instantiate","parent","initCard","children","map","item","destroy","info","selfLevel","color","Color","WHITE","giftStep","showCharacter","BLACK"],"mappings":"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","sourceRoot":"/","sourcesContent":["/**\n * @author heyuchang\n */\ncc.Class({\n  extends: cc.Component,\n  properties: {\n    container: cc.Node,\n    avatar: cc.Node,\n    prefab: cc.Prefab,\n  },\n  init(c) {\n    this._controller = c\n\n    if (c.social.node.active) {\n      let highLevel = c.social.getHighestLevel()\n      if (highLevel) {\n        this.showAvatar(highLevel)\n        this.loadContainer(+highLevel)\n      } else {\n        this.avatar.active = false\n        this.loadContainer(1)\n      }\n    } else {\n      this.avatar.active = false\n    }\n  },\n  showAvatar(level) {\n    this.avatar.active = true\n    let data = this._controller.gameData.json.levelData[+level - 1]\n    let heightScore = this._controller.social.getHighestScore()\n    this.avatar.getChildByName('name').getComponent(cc.Label).string = '历史最高:' + data.name\n    this.avatar.getChildByName('score').getComponent(cc.Label).string = '分数' + heightScore\n    setTimeout(() => {\n      this._controller.scoreMgr.characterMgr.showAvatarCharacter(+level, this.avatar.getChildByName('db'))\n    }, 1000)\n  },\n  loadContainer(level) {\n    let data = this._controller.gameData.json.levelData\n    this.clearContainer()\n    setTimeout(() => {\n      for (let i = 0; i < data.length; i++) {\n        let card = cc.instantiate(this.prefab)\n        card.parent = this.container\n        this.initCard(card, data[i], i, level)\n      }\n    }, 1000)\n  },\n  clearContainer() {\n    this.container.children.map(item => {\n      item.destroy()\n    })\n  },\n  initCard(card, info, level, selfLevel) {\n    if (level < selfLevel) {\n      card.getChildByName('name').getComponent(cc.Label).string = info.name\n      //card.getChildByName('score').getComponent(cc.Label).string = \"得分:\" + info.score\n      card.getChildByName('db').color = cc.Color.WHITE\n      card.getChildByName('giftStep').getComponent(cc.Label).string = \"开局奖励\" + info.giftStep + \"步\"\n      this._controller.scoreMgr.characterMgr.showCharacter(level + 1, card.getChildByName('db'))\n    } else {\n      card.getChildByName('name').getComponent(cc.Label).string = '???'\n      card.getChildByName('giftStep').getComponent(cc.Label).string = \"开局奖励???步\"\n      card.getChildByName('db').color = cc.Color.BLACK\n      this._controller.scoreMgr.characterMgr.showCharacter(level + 1, card.getChildByName('db'), cc.Color.BLACK)\n    }\n    // this._controller.scoreMgr.characterMgr.showCharacter(level + 1, card.getChildByName('db'), 0)\n  }\n});"]}